### 1. 각 코드에서 일어난 ERROR의 원인을 서술하시오. (튜플)

#### 1). 
t = 1,2,'a','b'
print(t[0])
del t[0] # 튜플은 고정값이므로 삭제(del)를 지원하지 않는다. 
print(type(t), t)


#################

#### 2). 
t[0] = 'hong' # 마찬가지로 고정값이므로 [0]에 할당된 1을 바꾸는것은 불가능하다 
print(type(t), t)

##################

#### 3). 
lower, upper = minmax([4,5,2,3,1,6,7]) # minmax() 라는 함수를 선언한적이 없어용
print(type(lower), lower)
print(type(upper), upper)
print()
lower, upper, other = minmax([4,5,2,3,1,6,7]) 

#######################

#### 4). 

t = 1,2,'a','b'
print(t[]) # 인덱싱 빈칸은 안돼유
print(t[1])
print(t[-1])

###########################

### 2. 코드 채워넣기 : 회귀분석

import statsmodels.api as sm
from scipy import stats

X = [1,2,3,4,5]
y = [6,7,8,9,10]

A = stats.linregress(X, y)
print(type(A), A)

# * 다음 빈칸을 채우세요.
print(f'기울기 = {A.slope}')
print(f'편향 = {A.intercept}')
print(f'R2 = {A.rvalue}')
print(f'피어슨값 = {A.pvalue}')

################################

  ### 3. 해당하는 그림의 코드 입력하기 

#### 2.) 다중분류


# <<<<<<<<<<<<<<<<<사진>>>>>>>>>>>>>>>>>>>



import mglearn 
from sklearn.datasets import make_blobs

import matplotlib.pyplot as plt

X, y = make_blobs(n_samples=100, random_state=42)
mglearn.discrete_scatter(X[:,0], X[:,1], y)
plt.xlabel('A_line')
plt.ylabel('B_line')
plt.legend(['a_side', 'b_side', 'c_side'])
plt.show()

###################################

  #### 2.) 이미지 데이터셋 : 올리베티 얼굴 이미지
from sklearn.datasets import fetch_olivetti_faces

olivetti = fetch_olivetti_faces()

def imgshow(N, M, img, cmap):
    fig = plt.figure(figsize=(8,5))
    plt.subplots_adjust(top=1, bottom=0, hspace=0, wspace=0.05)
    img_list = np.random.choice(range(len(img.data)), N * M) 
    for i in range(N):
        for j in range(M):
            k = img_list[i*M+j]           
            ax = fig.add_subplot(N, M, i*M+j+1)
            ax.imshow(img.images[k], cmap=cmap)
            ax.grid(False)
            ax.xaxis.set_ticks([])
            ax.yaxis.set_ticks([])
            plt.title(img.target[k])

            
    plt.tight_layout()
    plt.show()


np.random.seed(42)     
imgshow(5,5,olivetti,'rainbow')
# <<<<<<<<<<<<<<<<<사진>>>>>>>>>>>>>>>>>>>


#####################################

#### 3.) sklearn

import warnings
warnings.filterwarnings('ignore')

%matplotlib inline
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

plt.rcParams['font.family'] = 'D2Coding'
plt.rcParams['axes.unicode_minus'] = False

from sklearn.datasets import load_digits
import seaborn as sns
digits = load_digits()



# <<<<<<<<<<<<<<<<<사진>>>>>>>>>>>>>>>>>>>




idx =  int(input('숫자와 인덱스 입력:'))
sns.heatmap(digits.images[idx], annot=True, fmt='2.0f', cbar=True
           , xticklabels=True, yticklabels=True, cmap='inferno')
plt.title(f"MNIST handwrite digit image {idx} = {digits.target[idx]}")
plt.show()

